{"ast":null,"code":"var _jsxFileName = \"/Users/changhsinchien/Desktop/Web-developer/Face_Recognition/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkeForm from './components/ImageLinkeForm/ImageLinkeForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai, { FACE_DETECT_MODEL } from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nconst app = new Clarifai.App({\n  apiKey: '870f1255c44c4247b84caa340e399245'\n});\nconst particleOption = {\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      console.log(clarifaiFace);\n      const img = document.getElementById('input_image'); // It is string originally, so we need to transfrom it into integer\n\n      const width = Number(img.width);\n      const height = Number(img.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        // right is form right side \n        rightCol: width - clarifaiFace.right_col * width,\n        // bottom is form bottom side \n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          join: data.join\n        }\n      });\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(FACE_DETECT_MODEL, this.state.input).then(response => {\n        // Use Class here\n        if (response) {\n          // put request\n          fetch('http://localhost:3000/image', {\n            // put request only need id\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            // {user:{entries: count}} is not good because it will change the entire object\n            // the below assign way only change the one that we want to change\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n          this.displayFaceBox(this.calculateFaceLocation(response));\n        }\n      }).catch(err => console.log(\"fail\"));\n    };\n\n    this.onRouteChange = args => {\n      if (args === 'signout') {\n        this.setState({\n          isSignin: false\n        });\n      } else if (args === 'home') {\n        this.setState({\n          isSignin: true\n        });\n      }\n\n      this.setState({\n        route: args\n      });\n    };\n\n    this.state = {\n      input: '',\n      box: {},\n      imageURL: '',\n      route: 'signin',\n      isSignin: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: '',\n        join: ''\n      }\n    };\n  } // ********************************\n  // use to connect to the server\n  // componentDidMount(){\n  //   fetch('http://localhost:3000/')\n  //   .then(response=>response.json())\n  //   .then(console.log)\n  // }\n  // ********************************\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particle\",\n      params: particleOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignin: this.state.isSignin,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }), this.state.route == 'home' // wrap then we can use javascript syntax\n    ?\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkeForm, {\n      onInputChange: this.onInputChange,\n      Onsubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageURL: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    })) : this.state.route == 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/changhsinchien/Desktop/Web-developer/Face_Recognition/facerecognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkeForm","Rank","Particles","Clarifai","FACE_DETECT_MODEL","FaceRecognition","SignIn","Register","app","App","apiKey","particleOption","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","console","log","img","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","loadUser","setState","user","id","name","email","entries","join","displayFaceBox","box","onInputChange","event","input","target","onSubmit","imageURL","state","models","predict","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","args","isSignin","route","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkeForm from './components/ImageLinkeForm/ImageLinkeForm.js'\nimport Rank from './components/Rank/Rank.js'\nimport Particles from 'react-particles-js';\nimport Clarifai, { FACE_DETECT_MODEL } from 'clarifai' ;\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\nimport SignIn from './components/SignIn/SignIn.js'\nimport Register from './components/Register/Register.js'\nconst app = new Clarifai.App({\n  apiKey: '870f1255c44c4247b84caa340e399245'\n});\n\nconst particleOption ={\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input: '',\n      box:{},\n      imageURL:'',\n      route: 'signin',\n      isSignin: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: '',\n        join: ''\n      }\n    }\n  }\n// ********************************\n// use to connect to the server\n  // componentDidMount(){\n  //   fetch('http://localhost:3000/')\n  //   .then(response=>response.json())\n  //   .then(console.log)\n  // }\n// ********************************\n\n\n  calculateFaceLocation = (data)=>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(clarifaiFace);\n    const img = document.getElementById('input_image');\n    // It is string originally, so we need to transfrom it into integer\n    const width = Number(img.width);\n    const height= Number(img.height);\n    console.log(width, height);\n    return{\n      leftCol : clarifaiFace.left_col*width,\n      topRow : clarifaiFace.top_row*height,\n      // right is form right side \n      rightCol : width - clarifaiFace.right_col*width,\n      // bottom is form bottom side \n      bottomRow : height - clarifaiFace.bottom_row*height\n    }\n  }\n\n  loadUser = (data)=>{\n    this.setState(\n        {user:{\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            entries: data.entries,\n            join: data.join\n          }\n        }\n    )\n  }\n  displayFaceBox = (box)=>{\n    this.setState({box: box});\n  }\n\n  onInputChange = (event)=>{\n    this.setState({input: event.target.value});\n  }\n\n  onSubmit = ()=>{\n    this.setState({imageURL: this.state.input});\n    app.models.predict(FACE_DETECT_MODEL, this.state.input )\n    .then(response =>{\n        // Use Class here\n        if(response){\n          // put request\n          fetch('http://localhost:3000/image', {\n              // put request only need id\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n              id: this.state.user.id\n              }\n              )\n            }\n          ).then(response=>response.json()).then(count=>{\n            // {user:{entries: count}} is not good because it will change the entire object\n            // the below assign way only change the one that we want to change\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n        this.displayFaceBox(this.calculateFaceLocation(response)) \n      }\n    }\n    )\n    .catch(err=> console.log(\"fail\"));\n  }\n  onRouteChange = (args)=>{\n    if(args==='signout'){\n      this.setState({isSignin: false});\n    }else if(args==='home'){\n      this.setState({ isSignin: true });\n    }\n    this.setState({ route: args});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className ='particle'\n          params={\n            particleOption\n          }\n        />\n        <Navigation isSignin={this.state.isSignin} onRouteChange={this.onRouteChange}/>\n        \n        {this.state.route=='home'\n        // wrap then we can use javascript syntax\n          ? \n          <div>\n            <Logo />\n            <Rank name ={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkeForm \n              onInputChange={this.onInputChange}\n              Onsubmit={this.onSubmit} />\n            <FaceRecognition box={this.state.box} imageURL={this.state.imageURL} />\n          </div>\n          : (this.state.route == 'signin'\n          ? <SignIn loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\n          : <Register loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n\n      </div>\n    );\n  }\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}