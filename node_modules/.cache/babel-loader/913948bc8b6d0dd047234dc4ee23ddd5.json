{"ast":null,"code":"var _jsxFileName = \"/Users/changhsinchien/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkeForm from './components/ImageLinkeForm/ImageLinkeForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai, { FACE_DETECT_MODEL } from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nconst app = new Clarifai.App({\n  apiKey: '870f1255c44c4247b84caa340e399245'\n});\nconst particleOption = {\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const img = Document.getElementById('input_image'); // It is string originally, so we need to transfrom it into integer\n\n      const width = Number(img.width);\n      const height = Number(img.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.topRow * height,\n        // right is form right side \n        rightCol: width - clarifaiFace.rightCol * width,\n        // bottom is form bottom side \n        bottomRow: hegiht - clarifaiFace.bottomRow * height\n      };\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(FACE_DETECT_MODEL, this.state.input).then(response => {\n        // Use Class here\n        this.calculateFaceLocation(response);\n      }).catch(err => console.log(\"fail\"));\n    };\n\n    this.state = {\n      input: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particle\",\n      params: particleOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkeForm, {\n      onInputChange: this.onInputChange,\n      Onsubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageURL: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/changhsinchien/facerecognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkeForm","Rank","Particles","Clarifai","FACE_DETECT_MODEL","FaceRecognition","app","App","apiKey","particleOption","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","img","Document","getElementById","width","Number","height","leftCol","left_col","topRow","rightCol","bottomRow","hegiht","onInputChange","event","setState","input","target","onSubmit","imageURL","state","models","predict","then","response","catch","err","console","log","box","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkeForm from './components/ImageLinkeForm/ImageLinkeForm.js'\nimport Rank from './components/Rank/Rank.js'\nimport Particles from 'react-particles-js';\nimport Clarifai, { FACE_DETECT_MODEL } from 'clarifai' ;\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\n\n\nconst app = new Clarifai.App({\n  apiKey: '870f1255c44c4247b84caa340e399245'\n});\n\nconst particleOption ={\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input: '',\n      box:{}\n    }\n  }\n\n  calculateFaceLocation = (data)=>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const img = Document.getElementById('input_image');\n    // It is string originally, so we need to transfrom it into integer\n    const width = Number(img.width);\n    const height= Number(img.height);\n    return{\n      leftCol : clarifaiFace.left_col*width,\n      topRow : clarifaiFace.topRow*height,\n      // right is form right side \n      rightCol : width - clarifaiFace.rightCol*width,\n      // bottom is form bottom side \n      bottomRow : hegiht - clarifaiFace.bottomRow*height\n    }\n  }\n\n  onInputChange = (event)=>{\n    this.setState({input: event.target.value});\n  }\n\n  onSubmit = ()=>{\n    this.setState({imageURL: this.state.input});\n    app.models.predict(FACE_DETECT_MODEL, this.state.input )\n    .then(response =>{\n        // Use Class here\n        this.calculateFaceLocation(response)}\n    )\n    .catch(err=> console.log(\"fail\"));\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className ='particle'\n          params={\n            particleOption\n          }\n        />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkeForm onInputChange={this.onInputChange} \n          Onsubmit = {this.onSubmit} />\n        <FaceRecognition imageURL = {this.state.imageURL} />\n      </div>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}